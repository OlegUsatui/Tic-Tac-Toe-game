{"version":3,"sources":["components/Modal/Modal.module.css","components/Score/Score.module.css","components/Square/Square.module.css","utils/functions.js","components/Square/Square.js","components/Board/Board.js","components/Modal/Modal.js","components/Score/Score.js","App.js","index.js"],"names":["module","exports","restartGame","setBoard","setTimeout","Array","fill","Square","value","onClick","index","className","css","square","Board","indexWinRow","board","handleClick","map","el","Modal","onSubmit","useState","playerName1","setPlayerName1","playerName2","setPlayerName2","overlay","name","modal","form","e","preventDefault","title","text","input","type","onChange","target","autoComplete","autoFocus","placeholder","buttonSubmit","Score","playersName","win1","win2","container","score","App","turn","setTurn","winner1","setWinner1","winner2","setWinner2","modalIsOpen","setModalIsOpen","playerName","setPlayerName","setIndexWinRow","useEffect","rows","i","length","a","b","c","winValue","findWinner","prev","toast","success","every","info","newBoard","splice","position","autoClose","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05f7e71c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__1v7jS\",\"form\":\"Modal_form__24D7A\",\"buttonSubmit\":\"Modal_buttonSubmit__24l4-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Score_container__2_kAJ\",\"title\":\"Score_title__11i74\",\"score\":\"Score_score__-PZsB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"square\":\"Square_square__3mXx3\"};","export function findWinner(board) {\r\n  const rows = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n\r\n  for (let i = 0; i < rows.length; i++) {\r\n    const [a, b, c] = rows[i];\r\n\r\n    if (board[a] && board[a] === board[b] && board[a] === board[c]) {\r\n      return { winValue: board[a], indexWinRow: i };\r\n    }\r\n  }\r\n\r\n  return [];\r\n}\r\n\r\nexport const restartGame = (setBoard) => {\r\n  setTimeout(() => setBoard(Array(9).fill(\"\")), 1000);\r\n};\r\n","import css from \"./Square.module.css\";\r\n\r\nconst Square = ({ value, onClick, index }) => {\r\n  return (\r\n    <button className={css.square} onClick={() => onClick(index)}>\r\n      {value}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Square;\r\n","import Square from \"../Square/Square\";\r\nimport \"./Board.css\";\r\n\r\nconst Board = ({ indexWinRow, board, handleClick }) => {\r\n  return (\r\n    <>\r\n      <div className=\"board\">\r\n        {board.map((el, index) => {\r\n          return (\r\n            <Square\r\n              key={index}\r\n              value={el}\r\n              index={index}\r\n              onClick={handleClick}\r\n            />\r\n          );\r\n        })}\r\n        {<div className={`line${indexWinRow}`}></div>}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import { useState } from \"react\";\r\nimport css from \"./Modal.module.css\";\r\n\r\nconst Modal = ({ onSubmit }) => {\r\n  const [playerName1, setPlayerName1] = useState(\"\");\r\n  const [playerName2, setPlayerName2] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit({ playerName1, playerName2 });\r\n  };\r\n\r\n  return (\r\n    <div className={css.overlay} name=\"overlay\">\r\n      <div className={css.modal}>\r\n        <form className={css.form} onSubmit={handleSubmit}>\r\n          <h2 className={css.title}>Welcome to the game of tic tac toe</h2>\r\n          <p className={css.text}>Enter the name of the player №1</p>\r\n          <input\r\n            className={css.input}\r\n            value={playerName1}\r\n            type=\"text\"\r\n            onChange={(e) => setPlayerName1(e.target.value)}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Player Х\"\r\n          ></input>\r\n          <p className={css.text}>Enter the name of the player №2</p>\r\n          <input\r\n            className={css.input}\r\n            value={playerName2}\r\n            type=\"text\"\r\n            onChange={(e) => setPlayerName2(e.target.value)}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Player О\"\r\n          ></input>\r\n          <button type=\"submit\" className={css.buttonSubmit}>\r\n            Start\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Modal;\r\n","import css from \"./Score.module.css\";\r\n\r\nconst Score = ({ playersName, win1, win2 }) => {\r\n  const { playerName1, playerName2 } = playersName;\r\n  return (\r\n    <div className={css.container}>\r\n      <h2 className={css.title}>Score</h2>\r\n      <p className={css.score}>\r\n        Player {playerName1} (X): {win1}\r\n      </p>\r\n      <p className={css.score}>\r\n        Player 2 {playerName2} (O): {win2}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Score;\r\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { findWinner, restartGame } from \"./utils/functions\";\nimport Board from \"./components/Board/Board\";\nimport Modal from \"./components/Modal/Modal\";\nimport Score from \"./components/Score/Score\";\n\nconst App = () => {\n  const [board, setBoard] = useState(Array(9).fill(\"\"));\n  const [turn, setTurn] = useState(\"X\");\n  const [winner1, setWinner1] = useState(0);\n  const [winner2, setWinner2] = useState(0);\n  const [modalIsOpen, setModalIsOpen] = useState(true);\n  const [playerName, setPlayerName] = useState(\"\");\n  const [indexWinRow, setIndexWinRow] = useState(null);\n\n  useEffect(() => {\n    const { playerName1, playerName2 } = playerName;\n    const { winValue, indexWinRow } = findWinner(board);\n\n    setIndexWinRow(indexWinRow);\n\n    if (winValue && winValue === \"X\") {\n      setWinner1((prev) => prev + 1);\n      toast.success(`Победил ${playerName1}`);\n      restartGame(setBoard);\n      return;\n    }\n    if (winValue && winValue === \"O\") {\n      setWinner2((prev) => prev + 1);\n      toast.success(`Победил ${playerName2}`);\n      restartGame(setBoard);\n      return;\n    }\n    if (board.every((value) => value)) {\n      toast.info(`Ничья`);\n      restartGame(setBoard);\n    }\n  }, [board, playerName]);\n\n  const onSubmit = (playersName) => {\n    setPlayerName(playersName);\n    setModalIsOpen(false);\n  };\n\n  const handleClick = (index) => {\n    if (index < 0 || index > 9 || board[index]) return;\n\n    const newBoard = [...board];\n    newBoard.splice(index, 1, turn);\n    setBoard(newBoard);\n    const newTurn = turn === \"X\" ? \"O\" : \"X\";\n    setTurn(newTurn);\n  };\n\n  return (\n    <div className=\"App\">\n      <Board\n        indexWinRow={indexWinRow}\n        board={board}\n        handleClick={handleClick}\n      />\n      <Score playersName={playerName} win1={winner1} win2={winner2} />\n      <ToastContainer position=\"top-right\" autoClose={3000} />\n      {modalIsOpen && <Modal onSubmit={onSubmit} />}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}